#!/bin/bash

## GPLv3
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

SBOPATH=/var/lib/sbopkg/SBo/??.?
ARCH=$(uname -m)
QUERY=$(echo "$2") # | tr '[:upper:]' '[:lower:]' )
CATEGORY=$(echo "$QUERY" | cut -f1 -d"/")
PKG_NAME=$(echo "$QUERY" | cut -f2 -d"/")
CWD=$(pwd)

build_pkg() {
    local FILE=${1##*/}
    # TODO account for ARCH
    ULINK=$(cat "$FILE".info | grep DOWNLOAD= | cut -f2 -d\" )
    wget --no-clobber $ULINK
    local TARBALL=$(echo "$ULINK" | rev | cut -f1 -d"/" | rev )
    local MD5SUM=$(md5sum $TARBALL | cut -f1 -d" ")
    local MD5CHECK=$(cat "$FILE".info | grep MD5SUM= | cut -f2 -d\" )
    if [ "$MD5CHECK" != "$MD5SUM" ]; then echo "O.o md5sums do not match. Exiting." && exit ; fi
    chmod +x ./"$FILE".SlackBuild
    ./"$FILE".SlackBuild 2> /tmp/sport.log #&& ls /tmp/"$FILE"*SBo*t?z
}

syntax_chk() {
    local CHECK=${1}
    TEST=$(echo $CHECK | grep "/" | rev | cut -b1 )
    if [ X$TEST == "X" ]
    then echo "You must provide category/package not just the package name" && exit
    fi
}

untar_pkg() {
    if [ ! -d $SBOPATH/"$CATEGORY"/"$PKG_NAME" ] ; then
	tar -xf $SBOPATH/"$CATEGORY"/"$PKG_NAME".tar.gz -C $SBOPATH/"$CATEGORY"/
    fi
}

# did we get all the info we need to run this script?
if [ $# -lt 2 ]
then
    	echo " "
        echo "Syntax Error. sport needs a verb and a package name:"
	echo "sport search|cat|build|install PACKAGE"
	echo " "
        exit
fi

# the script

case "$1" in
    search) find $SBOPATH -iname *"$QUERY"*.tar.* | grep -v asc$ | rev | cut -f1,2 -d"/" | rev 
	;;
    cat)
	syntax_chk "$QUERY"
	untar_pkg
	echo " "
	echo "------------------------------------------"
	cat $SBOPATH/"$CATEGORY"/"$PKG_NAME"/{"$PKG_NAME".info,README}
	echo "------------------------------------------"
	echo " " 
	;;
    build)
	syntax_chk "$QUERY"
	untar_pkg
	cd $SBOPATH/"$CATEGORY"/"$PKG_NAME"
	build_pkg "$PKG_NAME"
	cd $CWD
	;;
    install)
	syntax_chk "$QUERY"
	untar_pkg
	cd $SBOPATH/"$CATEGORY"/"$PKG_NAME"
	build_pkg "$PKG_NAME"
	installpkg /tmp/"$PKG_NAME"*SBo*t?z
	cd $CWD
	;;
    clean)
	syntax_chk "$QUERY"
	rm -r $SBOPATH/"$CATEGORY"/"$PKG_NAME"
	rm /tmp/"$PKG_NAME"*SBo*t?z
	tar -xf $SBOPATH/"$CATEGORY"/"$PKG_NAME".tar.gz -C $SBOPATH/"$CATEGORY"/
	;;
    check)
	SLASH=$(echo "$QUERY" | grep "/")
	if [ X$SLASH == "X" ]
	    then ls /var/log/packages/*"$QUERY"*
	    else ls /var/log/packages/*$(echo $SLASH | cut -f2 -d"/" )*
	fi
	;;
esac
